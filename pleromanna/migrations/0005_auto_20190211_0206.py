# Generated by Django 2.1.5 on 2019-02-11 02:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import pleromanna.models
import taggit.managers
import wagtail.core.fields
import wagtail.core.models
import wagtail.search.index


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('pleromanna', '0004_pleromahomepage_notice'),
    ]

    operations = [
        migrations.CreateModel(
            name='LessonCollectionPage',
            fields=[
                ('contextpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pleromanna.ContextPage')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtailcore.Collection')),
            ],
            options={
                'verbose_name': 'Lessons page',
            },
            bases=('pleromanna.contextpage',),
        ),
        migrations.CreateModel(
            name='LessonSeriesPage',
            fields=[
                ('contextpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pleromanna.ContextPage')),
            ],
            options={
                'abstract': False,
            },
            bases=('pleromanna.contextpage',),
        ),
        migrations.CreateModel(
            name='PleroMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('type', models.CharField(choices=[('audio', 'Audio file'), ('video', 'Video file')], max_length=255)),
                ('width', models.PositiveIntegerField(blank=True, null=True, verbose_name='width')),
                ('height', models.PositiveIntegerField(blank=True, null=True, verbose_name='height')),
                ('thumbnail', models.FileField(blank=True, upload_to='media_thumbnails', verbose_name='thumbnail')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('duration', models.PositiveIntegerField(blank=True, help_text='Duration in seconds', null=True, verbose_name='duration')),
                ('file', models.FileField(upload_to=pleromanna.models.PleroMedia.process, verbose_name='file')),
                ('collection', models.ForeignKey(default=wagtail.core.models.get_root_collection_id, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.Collection', verbose_name='collection')),
            ],
            options={
                'verbose_name': 'media',
                'abstract': False,
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('stop_date', models.DateField(blank=True, null=True)),
                ('description', wagtail.core.fields.RichTextField(blank=True)),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtailcore.Collection')),
            ],
        ),
        migrations.CreateModel(
            name='SubSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('stop_date', models.DateField(blank=True, null=True)),
                ('description', wagtail.core.fields.RichTextField(blank=True)),
                ('series', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pleromanna.Series')),
            ],
        ),
        migrations.AddField(
            model_name='pleromedia',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='pleromanna.Series'),
        ),
        migrations.AddField(
            model_name='pleromedia',
            name='subseries',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='pleromanna.SubSeries'),
        ),
        migrations.AddField(
            model_name='pleromedia',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text=None, through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags'),
        ),
        migrations.AddField(
            model_name='pleromedia',
            name='uploaded_by_user',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='uploaded by user'),
        ),
        migrations.AddField(
            model_name='lessonseriespage',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pleromanna.Series'),
        ),
    ]
