worker_processes 1;

user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log combined;
  sendfile on;

  upstream wagtail {
    #server unix:/tmp/gunicorn.sock fail_timeout=0;
    server localhost:8080 fail_timeout=0;
  }

  # Redirect all non-encrypted to encrypted
  server {
      server_name dev.pleromabiblechurch.org;
      listen 80;
      return 301 https://dev.pleromabiblechurch.org$request_uri;
  }

  server {
      server_name dev.pleromabiblechurch.org;

      listen 443;  # <-

      ssl on;  # <-
      ssl_certificate /etc/letsencrypt/live/dev.pleromabiblechurch.org/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/dev.pleromabiblechurch.org/privkey.pem;

      client_max_body_size 4G;

      access_log /var/log/nginx/dev.pleromabiblechurch.org.access.log;
      error_log /var/log/nginx/dev.pleromabiblechurch.org.error.log;

      location / {
	# checks for static file, if not found proxy to app
	try_files $uri @proxy_to_app;
      }

      location @proxy_to_app {
	  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	  proxy_set_header X-Forwarded-Proto https;  # <-
	  proxy_set_header Host $http_host;
	  proxy_redirect off;

	  if (!-f $request_filename) {
	      proxy_pass http://wagtail;
	      break;
	  }
      }
  }
}


