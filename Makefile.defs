define exenv =
	. .penv/bin/activate
	$(1)
endef

define gunicorn =
	(. .penv/bin/activate
	gunicorn -w$(1) -b localhost:8080 pleromanna.wsgi & 
	echo $$! > gunicorn.pid)
endef

define devmake =
	$(MAKE) $(1)
endef 

define collectstatic =
	. .penv/bin/activate
	./manage.py collectstatic -i wagtail* -i common* -i admin* --no-input
endef 

define dumpdb =
	test -f pdb.dump && mv pdb.dump pdb.dump.old
	pg_dump -h dev.pleromabiblechurch.org -U dbsync pleromadb > pdb.dump
	dropdb pleromadb 
	createdb pleromadb 
	cat pdb.dump | psql -U dbsync pleromadb
endef 

define certbot_install =
	if [ -f .dev ]; then
	   echo "Skipping install and configure of cerbot on dev!"
	 else
	   echo "Attempting to install and configure cerbot!"
	   cat /etc/apt/sources.list | grep -c certbot || (
		   sudo apt-get install software-properties-common
		   sudo add-apt-repository universe
		   sudo add-apt-repository ppa:certbot/certbot
		   sudo apt-get update
		   sudo apt-get install certbot python-certbot-nginx )
	   test -f /etc/letsencrypt/live/dev.pleromabiblechurch.org || \
		   sudo certbot --nginx -d dev.pleromabiblechurch.org
	 fi
endef

define nginx_install =
	if [ -f .dev ]; then
	   echo "Skipping install and configure of nginx on dev!"
	else
	   echo "Attempting to install and configure nginx!"
	   which nginx || sudo apt install nginx
	   which nginx && echo "Nginx installation detected."
	   cmp nginx.conf /etc/nginx/nginx.conf
	   CMPSTAT="$$?"
	   if [ $${CMPSTAT} -eq 0 ]; then
		   echo "nginx already configured."
	   else
		   echo "copying nginx configuration."
		   sudo cp nginx.conf /etc/nginx/nginx.conf
		   sudo service nginx restart
	   fi
	fi
endef

#libcurl is required for PyVimeo package to operate correctly
define curl_install =
	sudo apt install libcurl4-openssl-dev libssl-dev
endef
